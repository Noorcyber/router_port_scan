import nmap # Research done by Noor Shaheed 07/16/2023
import subprocess
import platform

def scan_network_devices(target_ip):
    nm = nmap.PortScanner()
    nm.scan(target_ip, arguments='-O')  # Port scanning removed
    device_info = []

    for host in nm.all_hosts():
        if 'osclass' in nm[host]:
            osclass = nm[host]['osclass'][0]
            vendor = osclass.get('vendor', 'Unknown')
            os_family = osclass.get('osfamily', 'Unknown')
            os_gen = osclass.get('osgen', 'Unknown')
            device_info.append({
                'IP': host,
                'Vendor': vendor,
                'Operating System': os_family,
                'OS Generation': os_gen
            })

    return device_info

def execute_command(command):
    try:
        output = subprocess.check_output(command, shell=True, universal_newlines=True)
        return output
    except subprocess.CalledProcessError:
        return "Command execution failed."

def ping_host(target_ip):
    system_type = platform.system()
    if system_type == 'Windows':
        command = f"ping -n 4 {target_ip}"
    else:
        command = f"ping -c 4 {target_ip}"
    return execute_command(command)

def traceroute_host(target_ip):
    system_type = platform.system()
    if system_type == 'Windows':
        command = f"tracert {target_ip}"
    else:
        command = f"traceroute {target_ip}"
    return execute_command(command)

def get_network_interfaces():
    system_type = platform.system()
    if system_type == 'Windows':
        command = "ipconfig"
    else:
        command = "ifconfig"
    return execute_command(command)

def get_arp_table():
    system_type = platform.system()
    if system_type == 'Windows':
        command = "arp -a"
    else:
        command = "arp"
    return execute_command(command)

# Example usage
target_ip = input('Enter an IP address:')  # Replace with your router/firewall IP address
results = scan_network_devices(target_ip)

if results:
    print(f"Device Information for {target_ip}:")
    for device in results:
        print(f"IP: {device['IP']}")
        print(f"Vendor: {device['Vendor']}")
        print(f"Operating System: {device['Operating System']}")
        print(f"OS Generation: {device['OS Generation']}")
        print('---')
else:
    print("No devices found.")

# Ping test
ping_output = ping_host(target_ip)
print("Ping Test:")
print(ping_output)

# Traceroute test
traceroute_output = traceroute_host(target_ip)
print("Traceroute:")
print(traceroute_output)

# Network Interfaces
network_interfaces_output = get_network_interfaces()
print("Network Interfaces:")
print(network_interfaces_output)

# ARP Table
arp_table_output = get_arp_table()
print("ARP Table:")
print(arp_table_output)
